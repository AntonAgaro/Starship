name: Push to GitHub Container Registry

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push client image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.client
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/starship/client:${{ github.sha }}

      - name: Build and push server image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.server
          push: true
          tags: ghcr.io/${{ env.OWNER_LC }}/starship/server:${{ github.sha }}
  update-yc:
    runs-on: ubuntu-latest
    needs: [build-and-push]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Deploy COI VM
        id: deploy-coi
        uses: yc-actions/yc-coi-deploy@v2.0.0
        with:
          # Json containing authorized key for Service Account. More info https://cloud.yandex.ru/docs/container-registry/operations/authentication#sa-json
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          # Folder ID
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          # VM name to find or create in the provided folder.
          vm-name: ${{ secrets.YC_VM_NAME }}
          # Id of service account that will be attached to VM.
          vm-service-account-id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
          # Path to the `user-data.yaml` file inside repo.
          user-data-path: './user-data.yaml'
          # Path to the `docker-compose.yaml` file inside repo.
          docker-compose-path: './docker-compose.yml'
